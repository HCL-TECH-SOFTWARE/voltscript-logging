{"classname":"BaseLogWriter","comment":"Abstract class for writing log entries in the session","valuetype":"","filenamebase":"BaseLogWriter_ObjectClass","fqnprefix":"VoltscriptLogging","qn":"BaseLogWriter","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"7AD3BBAF0294573900258A7F004F94A5","classid":"3B373E9EC1C6805D00258B1C00328BBC","signature":"Public Class BaseLogWriter","modifiers":"Public","classname":"BaseLogWriter","parentclassname":"None","constructorsignature":"Public Sub New(label As String, minLevel As Integer, maxLevel As Integer, formatter As String)","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Abstract class for writing log entries in the session&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Abstract class for writing log entries in the session","inlinecomment":" \t &apos; Abstract class for writing log entries in the session","codesamplehtml":"", "methods":[{"label":"convertLogEntryToMessage","comment":"Converts a log entry in a specific string format using the formatter passed in. Override this method to skip using a formatter.","valuetype":"String","filenamebase":"convertLogEntryToMessage_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"convertLogEntryToMessage","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(logEntry As LogEntry)","signature":"Public Function convertLogEntryToMessage(logEntry As LogEntry) As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Converts a log entry in a specific string format using the formatter passed in. Override this method to skip using a formatter.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Converts a log entry in a specific string format using the formatter passed in. Override this method to skip using a formatter.","inlinecomment":" \t &apos; Converts a log entry in a specific string format using the formatter passed in. Override this method to skip using a formatter.","parentclassname":"BaseLogWriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"logEntry","comment":"Log Entry to format","valuetype":"LogEntry","filenamebase":"logEntry_ValuedElement","fqnprefix":"VoltscriptLoggingBaseLogWriterconvertLogEntryToMessage","qn":"logEntry","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Log Entry to format&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Log Entry to format","inlinecomment":" \t &apos; Log Entry to format"}]},{"label":"writeToLog","comment":"Write all entries, as appropriate, to the log","valuetype":"Boolean","filenamebase":"writeToLog_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"writeToLog","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(session As LogSession)","signature":"Public Function writeToLog(session As LogSession) As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Write all entries, as appropriate, to the log&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Write all entries, as appropriate, to the log","inlinecomment":" \t &apos; Write all entries, as appropriate, to the log","parentclassname":"BaseLogWriter","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"session","comment":"Current session being deleted","valuetype":"LogSession","filenamebase":"session_ValuedElement","fqnprefix":"VoltscriptLoggingBaseLogWriterwriteToLog","qn":"session","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Current session being deleted&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Current session being deleted","inlinecomment":" \t &apos; Current session being deleted"}]},{"label":"formatter","comment":"String to manage output format, using mustache templating for properties of a Log Entry.","valuetype":"String","filenamebase":"formatter_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"Get.formatter","codesample":"Dim fmt as String\nDim logger as BaseLogWriter\nfmt = |{{levelName}}: [{{timestamp}}] {{message}}\n{{extInfo}}|\nSet logger = new BaseLogWriter(&amp;quot;ConsoleLogger&amp;quot;, LEVEL_INFO, fmt)","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get formatter As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;String to manage output format, using mustache templating for properties of a Log Entry.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"String to manage output format, using mustache templating for properties of a Log Entry.","inlinecomment":" \t &apos; String to manage output format, using mustache templating for properties of a Log Entry.","parentclassname":"BaseLogWriter","codesamplehtml":"Dim fmt as String&lt;br /&gt;Dim logger as BaseLogWriter&lt;br /&gt;fmt = |{{levelName}}: [{{timestamp}}] {{message}}&lt;br /&gt;{{extInfo}}|&lt;br /&gt;Set logger = new BaseLogWriter(&amp;quot;ConsoleLogger&amp;quot;, LEVEL_INFO, fmt)", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"label","comment":"Label with which to refer to the log writer","valuetype":"String","filenamebase":"label_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"Get.label","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get label As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Label with which to refer to the log writer&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Label with which to refer to the log writer","inlinecomment":" \t &apos; Label with which to refer to the log writer","parentclassname":"BaseLogWriter","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"maxLevel","comment":"Level at which to log out","valuetype":"Integer","filenamebase":"maxLevel_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"Get.maxLevel","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get maxLevel As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Level at which to log out&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Level at which to log out","inlinecomment":" \t &apos; Level at which to log out","parentclassname":"BaseLogWriter","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"minLevel","comment":"","valuetype":"Integer","filenamebase":"minLevel_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"Get.minLevel","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get minLevel As Integer","modifiers":"Public Get","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"BaseLogWriter","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"initializeLog","comment":"Overload this method to do any setup before processing the LogEntry objects.","valuetype":"","filenamebase":"initializeLog_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"initializeLog","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub initializeLog()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overload this method to do any setup before processing the LogEntry objects.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overload this method to do any setup before processing the LogEntry objects.","inlinecomment":" \t &apos; Overload this method to do any setup before processing the LogEntry objects.","parentclassname":"BaseLogWriter","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(label As String, minLevel As Integer, maxLevel As Integer, formatter As String)","signature":"Public Sub New(label As String, minLevel As Integer, maxLevel As Integer, formatter As String)","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"BaseLogWriter","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"label","comment":"Name for the log writer, which will be the key when added to the session","valuetype":"String","filenamebase":"label_ValuedElement","fqnprefix":"VoltscriptLoggingBaseLogWriterNew","qn":"label","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Name for the log writer, which will be the key when added to the session&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Name for the log writer, which will be the key when added to the session","inlinecomment":" \t &apos; Name for the log writer, which will be the key when added to the session"},{"label":"minLevel","comment":"Minimum level to log out","valuetype":"Integer","filenamebase":"minLevel_ValuedElement","fqnprefix":"VoltscriptLoggingBaseLogWriterNew","qn":"minLevel","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Minimum level to log out&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Minimum level to log out","inlinecomment":" \t &apos; Minimum level to log out"},{"label":"maxLevel","comment":"Maximum level to log out","valuetype":"Integer","filenamebase":"maxLevel_ValuedElement","fqnprefix":"VoltscriptLoggingBaseLogWriterNew","qn":"maxLevel","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Maximum level to log out&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Maximum level to log out","inlinecomment":" \t &apos; Maximum level to log out"},{"label":"formatter","comment":"A string format to log out, which can include mustache template format to inlcude LogEntry properties","valuetype":"String","filenamebase":"formatter_ValuedElement","fqnprefix":"VoltscriptLoggingBaseLogWriterNew","qn":"formatter","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;A string format to log out, which can include mustache template format to inlcude LogEntry properties&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"A string format to log out, which can include mustache template format to inlcude LogEntry properties","inlinecomment":" \t &apos; A string format to log out, which can include mustache template format to inlcude LogEntry properties"}]},{"label":"outputLogEntryMessage","comment":"Writes out a specific LogEntry (already converted to a String). Overload this message for specific implementations.","valuetype":"","filenamebase":"outputLogEntryMessage_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"outputLogEntryMessage","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"(message As String)","signature":"Public Sub outputLogEntryMessage(message As String)","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Writes out a specific LogEntry (already converted to a String). Overload this message for specific implementations.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Writes out a specific LogEntry (already converted to a String). Overload this message for specific implementations.","inlinecomment":" \t &apos; Writes out a specific LogEntry (already converted to a String). Overload this message for specific implementations.","parentclassname":"BaseLogWriter","codesamplehtml":"", "signatureelements":["Public","Sub"], "arguments":[{"label":"message","comment":"Message to be outputted","valuetype":"String","filenamebase":"message_ValuedElement","fqnprefix":"VoltscriptLoggingBaseLogWriteroutputLogEntryMessage","qn":"message","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Message to be outputted&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Message to be outputted","inlinecomment":" \t &apos; Message to be outputted"}]},{"label":"terminateLog","comment":"Overload this method to do any setup after processing the LogEntry objects.","valuetype":"","filenamebase":"terminateLog_Method","fqnprefix":"VoltscriptLogging.BaseLogWriter","qn":"terminateLog","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub terminateLog()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overload this method to do any setup after processing the LogEntry objects.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overload this method to do any setup after processing the LogEntry objects.","inlinecomment":" \t &apos; Overload this method to do any setup after processing the LogEntry objects.","parentclassname":"BaseLogWriter","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
