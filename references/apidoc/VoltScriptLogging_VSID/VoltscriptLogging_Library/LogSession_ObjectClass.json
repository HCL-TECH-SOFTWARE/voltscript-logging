{"classname":"LogSession","comment":"Base class for VoltScript logging","valuetype":"","filenamebase":"LogSession_ObjectClass","fqnprefix":"VoltscriptLogging","qn":"LogSession","codesample":"Dim log as New LogSession","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"7AD3BBAF0294573900258A7F004F94A5","classid":"497E755B650E585B00258A7F004FD469","signature":"Public Class LogSession","modifiers":"Public","classname":"LogSession","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base class for VoltScript logging&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base class for VoltScript logging","inlinecomment":" \t &apos; Base class for VoltScript logging","codesamplehtml":"Dim log as New LogSession", "methods":[{"label":"addLogWriter","comment":"Adds a log writer for writing out log entries somewhere","valuetype":"LogSession","filenamebase":"addLogWriter_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"addLogWriter","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(logWriter As BaseLogWriter)","signature":"Public Function addLogWriter(logWriter As BaseLogWriter) As LogSession","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Adds a log writer for writing out log entries somewhere&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Adds a log writer for writing out log entries somewhere","inlinecomment":" \t &apos; Adds a log writer for writing out log entries somewhere","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"logWriter","comment":"Instance of BaseLogWriter or derived class","valuetype":"BaseLogWriter","filenamebase":"logWriter_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessionaddLogWriter","qn":"logWriter","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Instance of BaseLogWriter or derived class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Instance of BaseLogWriter or derived class","inlinecomment":" \t &apos; Instance of BaseLogWriter or derived class"}]},{"label":"createLogEntry","comment":"","valuetype":"LogEntry","filenamebase":"createLogEntry_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"createLogEntry","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(levelNum As Integer, message As String, extInfo As String, className As String)","signature":"Public Function createLogEntry(levelNum As Integer, message As String, extInfo As String, className As String) As LogEntry","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"levelNum","comment":"the Logging Level of the entry; you can use the constant as well","valuetype":"Integer","filenamebase":"levelNum_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessioncreateLogEntry","qn":"levelNum","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the Logging Level of the entry; you can use the constant as well&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the Logging Level of the entry; you can use the constant as well","inlinecomment":" \t &apos; the Logging Level of the entry; you can use the constant as well"},{"label":"message","comment":"the text message of the entry","valuetype":"String","filenamebase":"message_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessioncreateLogEntry","qn":"message","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the text message of the entry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the text message of the entry","inlinecomment":" \t &apos; the text message of the entry"},{"label":"extInfo","comment":"Any extended information to include with the entry or blank","valuetype":"String","filenamebase":"extInfo_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessioncreateLogEntry","qn":"extInfo","argumentindex":3,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Any extended information to include with the entry or blank&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Any extended information to include with the entry or blank","inlinecomment":" \t &apos; Any extended information to include with the entry or blank"},{"label":"className","comment":"Class from which the entry is logged or blank","valuetype":"String","filenamebase":"className_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessioncreateLogEntry","qn":"className","argumentindex":4,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class from which the entry is logged or blank&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class from which the entry is logged or blank","inlinecomment":" \t &apos; Class from which the entry is logged or blank"}]},{"label":"getLogEntriesByLevel","comment":"Filters the LogEntry objects into an array containing just those at or above the minimum level and also at or below the maximum level.","valuetype":"Variant","filenamebase":"getLogEntriesByLevel_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"getLogEntriesByLevel","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"(minLevel As Integer, maxLevel As Integer)","signature":"Public Function getLogEntriesByLevel(minLevel As Integer, maxLevel As Integer) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Filters the LogEntry objects into an array containing just those at or above the minimum level and also at or below the maximum level.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Filters the LogEntry objects into an array containing just those at or above the minimum level and also at or below the maximum level.","inlinecomment":" \t &apos; Filters the LogEntry objects into an array containing just those at or above the minimum level and also at or below the maximum level.","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"minLevel","comment":"Minimum level of logs you want","valuetype":"Integer","filenamebase":"minLevel_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessiongetLogEntriesByLevel","qn":"minLevel","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Minimum level of logs you want&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Minimum level of logs you want","inlinecomment":" \t &apos; Minimum level of logs you want"},{"label":"maxLevel","comment":"Maximum level of the logs you want","valuetype":"Integer","filenamebase":"maxLevel_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessiongetLogEntriesByLevel","qn":"maxLevel","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Maximum level of the logs you want&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Maximum level of the logs you want","inlinecomment":" \t &apos; Maximum level of the logs you want"}]},{"label":"getLogEntryByID","comment":"","valuetype":"LogEntry","filenamebase":"getLogEntryByID_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"getLogEntryByID","codesample":"","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(entryID As String)","signature":"Public Function getLogEntryByID(entryID As String) As LogEntry","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Function"], "arguments":[{"label":"entryID","comment":"the entryID of the desired log entry","valuetype":"String","filenamebase":"entryID_ValuedElement","fqnprefix":"VoltscriptLoggingLogSessiongetLogEntryByID","qn":"entryID","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;the entryID of the desired log entry&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"the entryID of the desired log entry","inlinecomment":" \t &apos; the entryID of the desired log entry"}]},{"label":"lastEntry","comment":"Last log entry created / added","valuetype":"LogEntry","filenamebase":"lastEntry_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"Get.lastEntry","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get lastEntry As LogEntry","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Last log entry created / added&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Last log entry created / added","inlinecomment":" \t &apos; Last log entry created / added","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"sessionID","comment":"Unique ID for the session","valuetype":"String","filenamebase":"sessionID_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"Get.sessionID","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get sessionID As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Unique ID for the session&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Unique ID for the session","inlinecomment":" \t &apos; Unique ID for the session","parentclassname":"LogSession","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"lastEntry","comment":"Last log entry created / added","valuetype":"LogEntry","filenamebase":"lastEntry_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"Set.lastEntry","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set lastEntry As LogEntry","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Last log entry created / added&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Last log entry created / added","inlinecomment":" \t &apos; Last log entry created / added","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"Delete","comment":"Destructor, during which LogWriters are processed","valuetype":"","filenamebase":"Delete_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"Delete","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub Delete()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Destructor, during which LogWriters are processed&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Destructor, during which LogWriters are processed","inlinecomment":" \t &apos; Destructor, during which LogWriters are processed","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"New","comment":"Constructor. Can only be used from getLogSession(). Do not use this constructor, use getLogSession() instead.","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor. Can only be used from getLogSession(). Do not use this constructor, use getLogSession() instead.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor. Can only be used from getLogSession(). Do not use this constructor, use getLogSession() instead.","inlinecomment":" \t &apos; Constructor. Can only be used from getLogSession(). Do not use this constructor, use getLogSession() instead.","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Sub"]},{"label":"reset","comment":"Deletes the LogSession without writing out entries","valuetype":"","filenamebase":"reset_Method","fqnprefix":"VoltscriptLogging.LogSession","qn":"reset","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub reset()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Deletes the LogSession without writing out entries&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Deletes the LogSession without writing out entries","inlinecomment":" \t &apos; Deletes the LogSession without writing out entries","parentclassname":"LogSession","codesamplehtml":"", "signatureelements":["Public","Sub"]}], "variables":[]}
