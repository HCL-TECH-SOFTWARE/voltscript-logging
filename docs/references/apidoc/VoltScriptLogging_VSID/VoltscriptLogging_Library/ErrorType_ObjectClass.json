{"classname":"ErrorType","comment":"Holder for errors","valuetype":"","filenamebase":"ErrorType_ObjectClass","fqnprefix":"VoltscriptLogging","qn":"ErrorType","codesample":"","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"7AD3BBAF0294573900258A7F004F94A5","classid":"27D3FC195F47CD6980258B25003DCD8E","signature":"Public Class ErrorType","modifiers":"Public","classname":"ErrorType","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Holder for errors&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Holder for errors","inlinecomment":" \t &apos; Holder for errors","codesamplehtml":"", "methods":[{"label":"getLogMessage","comment":"Returns &amp;quot;Error &amp;quot; &amp;amp; Me.message &amp;amp; &amp;quot; (&amp;quot; &amp;amp; Me.code &amp;amp; &amp;quot;) on line &amp;quot; &amp;amp; Me.lineNum","valuetype":"String","filenamebase":"getLogMessage_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"getLogMessage","codesample":"&amp;apos; This code writes logs for all errors previously captured and clears the stack\nDim errorObj as ErrorType\nSet errorObj = getErrorSession().getAndRemoveLastError()\nWhile (Not errorObj Is Nothing) Then\n    Call getLogSession().createLogEntry(LOG_WARNING, errorObj.getLogMessage(), errorObj.stackTrace, &amp;quot;&amp;quot;)\n    Set errorObj = getErrorSession().getAndRemoveLastError()\nWend","signaturecode":2112,"instancecode":64,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Function getLogMessage() As String","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Returns &amp;quot;Error &amp;quot; &amp;amp; Me.message &amp;amp; &amp;quot; (&amp;quot; &amp;amp; Me.code &amp;amp; &amp;quot;) on line &amp;quot; &amp;amp; Me.lineNum&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Returns &amp;quot;Error &amp;quot; &amp;amp; Me.message &amp;amp; &amp;quot; (&amp;quot; &amp;amp; Me.code &amp;amp; &amp;quot;) on line &amp;quot; &amp;amp; Me.lineNum","inlinecomment":" \t &apos; Returns &amp;quot;Error &amp;quot; &amp;amp; Me.message &amp;amp; &amp;quot; (&amp;quot; &amp;amp; Me.code &amp;amp; &amp;quot;) on line &amp;quot; &amp;amp; Me.lineNum","parentclassname":"ErrorType","codesamplehtml":"&amp;apos; This code writes logs for all errors previously captured and clears the stack&lt;br /&gt;Dim errorObj as ErrorType&lt;br /&gt;Set errorObj = getErrorSession().getAndRemoveLastError()&lt;br /&gt;While (Not errorObj Is Nothing) Then&lt;br /&gt;    Call getLogSession().createLogEntry(LOG_WARNING, errorObj.getLogMessage(), errorObj.stackTrace, &amp;quot;&amp;quot;)&lt;br /&gt;    Set errorObj = getErrorSession().getAndRemoveLastError()&lt;br /&gt;Wend", "signatureelements":["Public","Function"]},{"label":"code","comment":"Error code","valuetype":"Integer","filenamebase":"code_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Get.code","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get code As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error code&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error code","inlinecomment":" \t &apos; Error code","parentclassname":"ErrorType","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"lineNum","comment":"Line number where the error occurred","valuetype":"Integer","filenamebase":"lineNum_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Get.lineNum","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get lineNum As Integer","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Line number where the error occurred&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Line number where the error occurred","inlinecomment":" \t &apos; Line number where the error occurred","parentclassname":"ErrorType","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"message","comment":"Error message","valuetype":"String","filenamebase":"message_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Get.message","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get message As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error message&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error message","inlinecomment":" \t &apos; Error message","parentclassname":"ErrorType","codesamplehtml":"", "signatureelements":["Public","Property","Get"]},{"label":"methodName","comment":"Method where the error occurred","valuetype":"String","filenamebase":"methodName_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Get.methodName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get methodName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Method where the error occurred&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Method where the error occurred","inlinecomment":" \t &apos; Method where the error occurred","parentclassname":"ErrorType","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"scriptName","comment":"Script file containing the method.","valuetype":"String","filenamebase":"scriptName_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Get.scriptName","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get scriptName As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Script file containing the method.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Script file containing the method.","inlinecomment":" \t &apos; Script file containing the method.","parentclassname":"ErrorType","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"stackTrace","comment":"Stack trace, excluding this class","valuetype":"String","filenamebase":"stackTrace_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Get.stackTrace","codesample":"","signaturecode":2306,"instancecode":256,"argumentsuffix":"","signature":"Public Property Get stackTrace As String","modifiers":"Public Get","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Stack trace, excluding this class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Stack trace, excluding this class","inlinecomment":" \t &apos; Stack trace, excluding this class","parentclassname":"ErrorType","codesamplehtml":"", "attributes":["READ_ONLY"], "signatureelements":["Public","Property","Get"]},{"label":"code","comment":"Error code","valuetype":"Integer","filenamebase":"code_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Set.code","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set code As Integer","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error code&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error code","inlinecomment":" \t &apos; Error code","parentclassname":"ErrorType","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"message","comment":"Error message","valuetype":"String","filenamebase":"message_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"Set.message","codesample":"","signaturecode":2308,"instancecode":256,"argumentsuffix":"","signature":"Public Property Set message As String","modifiers":"Public Set","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Error message&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Error message","inlinecomment":" \t &apos; Error message","parentclassname":"ErrorType","codesamplehtml":"", "signatureelements":["Public","Property","Set"]},{"label":"New","comment":"Constructor","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltscriptLogging.ErrorType","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Constructor&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Constructor","inlinecomment":" \t &apos; Constructor","parentclassname":"ErrorType","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
